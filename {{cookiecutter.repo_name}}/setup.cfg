# This file mostly replaces setup.py. For more information, see:
# https://setuptools.readthedocs.io/en/latest/build_meta.html
# https://snarky.ca/what-the-heck-is-pyproject-toml/
[metadata]
name = {{cookiecutter.package_name}}
# Use semantic versioning when incrementing the version number:
# https://semver.org/
version = 0.1.0
[options]
packages = find:
include_package_data = true

# This is the list of dependent packages that will be installed by pip when
# installing your package. Some general guidance:
# * Include ONLY packages that are imported and used directly by the code in the
#   package. Do not include indirect dependencies, as those will be picked up
#   automatically when a *user* of your package runs pip-compile on their
#   project.
# * Try and be flexible about versions, i.e. don't pin to a specific version
#   (or narrow range of versions) unless there's a reason to do so. Overly
#   strict version requrements can make it difficult for users of the package to
#   find a set of compatible packages.
# * HOWEVER, if your package embeds resources from or produced by a dependent
#   package (e.g. Torch, sklearn, Spacy, NLTK), you probably do want to pin to a
#   specific version in that case, or at least a narrow range. It's not unusual
#   for packages like this to require a close or exact version match between
#   resources and package versions. For example, see the sklearn warning
#   described in this StackOverflow post:
#   https://stackoverflow.com/questions/41146759/check-sklearn-version-before-loading-model-using-joblib.
install_requires =
    setuptools
